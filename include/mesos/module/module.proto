// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

import "mesos/mesos.proto";

package mesos;

option java_package = "org.apache.mesos";
option java_outer_classname = "Protos";


/**
 * Collection of module libraries. A module library (Modules::Library) is a
 * shared dynamic library (.so/.dylib) that contains one or more modules
 * (Modules::Library::Module).  Each module may have module-specific parameters
 * in the form of key-value.
 */
message Modules {
  message Library {
    // If "file" contains a slash ("/"), then it is interpreted as a
    // (relative or absolute) pathname.  Otherwise a standard library
    // search is performed.
    optional string file = 1;

    // We will add the proper prefix ("lib") and suffix (".so" for
    // Linux and ".dylib" for OS X) to the "name".
    optional string name = 2;

    message Module {
      // Module name.
      optional string name = 1;

      // Module-specific parameters.
      repeated Parameter parameters = 2;
    }

    repeated Module modules = 3;
  }

  repeated Library libraries = 1;
}
